{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\React\\\\face-recognition-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport './App.css';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '06d276f994644eb4af4df2c2611623d2'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = response => {\n      // const clarifaiFace=response.outputs[0].data.regions[0].region_info.bounding_box;\n      // this.document.getElementById\n      const image = this.document.getElementById('inputimage');\n      const width = image.width;\n      const height = image.height;\n      console.log(width, height);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(function (response) {\n        console.log(response);\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        console.log(\"hi\");\n        this.calculateFaceLocation(response);\n        console.log(\"hi\");\n      }, function (err) {\n        //c0c0ac362b03416da06ab3fa36fb58e3\n        console.log(\"hi\");\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Asus/React/face-recognition-brain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","FaceRecognition","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","calculateFaceLocation","response","image","document","getElementById","width","height","console","log","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","outputs","data","regions","region_info","bounding_box","err","box","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport './App.css';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\n\nconst particlesOptions={\n    particles: {\n      number:{\n        value:100,\n        density:{\n          enable:true,\n          value_area:800\n        }\n      }\n    }\n}\n\nconst app=new Clarifai.App({\n  apiKey:'06d276f994644eb4af4df2c2611623d2'\n});\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box:{}\n    }\n  }\n\n  calculateFaceLocation=(response)=>{\n    // const clarifaiFace=response.outputs[0].data.regions[0].region_info.bounding_box;\n    // this.document.getElementById\n    const image=this.document.getElementById('inputimage');\n    const width=(image.width);\n    const height=(image.height);\n    console.log(width,height);\n  }\n\n  onInputChange=(event)=>{\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit=()=>{\n    this.setState({imageUrl:this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input).then(\n      function(response){\n        console.log(response);\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        console.log(\"hi\");\n        this.calculateFaceLocation(response);\n        console.log(\"hi\");\n      },\n      function(err){\n        //c0c0ac362b03416da06ab3fa36fb58e3\n        console.log(\"hi\");\n        console.log(err);\n      }\n    );\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation />\n        <Logo />\n        <Rank/>\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}